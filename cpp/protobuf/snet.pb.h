// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/snet.proto

#ifndef PROTOBUF_protobuf_2fsnet_2eproto__INCLUDED
#define PROTOBUF_protobuf_2fsnet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class EchoRequest;
class EchoRequestDefaultTypeInternal;
extern EchoRequestDefaultTypeInternal _EchoRequest_default_instance_;
class EchoResponse;
class EchoResponseDefaultTypeInternal;
extern EchoResponseDefaultTypeInternal _EchoResponse_default_instance_;
class InfoRequest;
class InfoRequestDefaultTypeInternal;
extern InfoRequestDefaultTypeInternal _InfoRequest_default_instance_;
class InfoResponse;
class InfoResponseDefaultTypeInternal;
extern InfoResponseDefaultTypeInternal _InfoResponse_default_instance_;
class InitRequest;
class InitRequestDefaultTypeInternal;
extern InitRequestDefaultTypeInternal _InitRequest_default_instance_;
class InitResponse;
class InitResponseDefaultTypeInternal;
extern InitResponseDefaultTypeInternal _InitResponse_default_instance_;
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class ResetRequest;
class ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
class ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class RxRequest;
class RxRequestDefaultTypeInternal;
extern RxRequestDefaultTypeInternal _RxRequest_default_instance_;
class RxResponse;
class RxResponseDefaultTypeInternal;
extern RxResponseDefaultTypeInternal _RxResponse_default_instance_;
class TxRequest;
class TxRequestDefaultTypeInternal;
extern TxRequestDefaultTypeInternal _TxRequest_default_instance_;
class TxResponse;
class TxResponseDefaultTypeInternal;
extern TxResponseDefaultTypeInternal _TxResponse_default_instance_;

namespace protobuf_protobuf_2fsnet_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_protobuf_2fsnet_2eproto

enum Packet_Type {
  Packet_Type_DATA = 0,
  Packet_Type_COMMAND = 1,
  Packet_Type_Packet_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Packet_Type_Packet_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Packet_Type_IsValid(int value);
const Packet_Type Packet_Type_Type_MIN = Packet_Type_DATA;
const Packet_Type Packet_Type_Type_MAX = Packet_Type_COMMAND;
const int Packet_Type_Type_ARRAYSIZE = Packet_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Packet_Type_descriptor();
inline const ::std::string& Packet_Type_Name(Packet_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Packet_Type_descriptor(), value);
}
inline bool Packet_Type_Parse(
    const ::std::string& name, Packet_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Packet_Type>(
    Packet_Type_descriptor(), name, value);
}
enum Status {
  SUCCESS = 0,
  FAILURE = 1,
  UNKNOWN = 2,
  EMPTY = 3,
  DUPLICATE = 4,
  BADTYPE = 5,
  Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Status_IsValid(int value);
const Status Status_MIN = SUCCESS;
const Status Status_MAX = BADTYPE;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
enum ClientType {
  ADMIN = 0,
  NODE = 1,
  ClientType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientType_IsValid(int value);
const ClientType ClientType_MIN = ADMIN;
const ClientType ClientType_MAX = NODE;
const int ClientType_ARRAYSIZE = ClientType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientType_descriptor();
inline const ::std::string& ClientType_Name(ClientType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientType_descriptor(), value);
}
inline bool ClientType_Parse(
    const ::std::string& name, ClientType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientType>(
    ClientType_descriptor(), name, value);
}
// ===================================================================

class EchoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EchoRequest) */ {
 public:
  EchoRequest();
  virtual ~EchoRequest();

  EchoRequest(const EchoRequest& from);

  inline EchoRequest& operator=(const EchoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoRequest& default_instance();

  static inline const EchoRequest* internal_default_instance() {
    return reinterpret_cast<const EchoRequest*>(
               &_EchoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EchoRequest* other);

  // implements Message ----------------------------------------------

  inline EchoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  EchoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EchoRequest& from);
  void MergeFrom(const EchoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EchoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:EchoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EchoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EchoResponse) */ {
 public:
  EchoResponse();
  virtual ~EchoResponse();

  EchoResponse(const EchoResponse& from);

  inline EchoResponse& operator=(const EchoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoResponse& default_instance();

  static inline const EchoResponse* internal_default_instance() {
    return reinterpret_cast<const EchoResponse*>(
               &_EchoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EchoResponse* other);

  // implements Message ----------------------------------------------

  inline EchoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  EchoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EchoResponse& from);
  void MergeFrom(const EchoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EchoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:EchoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResetRequest) */ {
 public:
  ResetRequest();
  virtual ~ResetRequest();

  ResetRequest(const ResetRequest& from);

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetRequest& default_instance();

  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ResetRequest* other);

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  ::google::protobuf::int32 address() const;
  void set_address(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 address_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResetResponse) */ {
 public:
  ResetResponse();
  virtual ~ResetResponse();

  ResetResponse(const ResetResponse& from);

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetResponse& default_instance();

  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ResetResponse* other);

  // implements Message ----------------------------------------------

  inline ResetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetResponse& from);
  void MergeFrom(const ResetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Status status() const;
  void set_status(::Status value);

  // @@protoc_insertion_point(class_scope:ResetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InfoRequest) */ {
 public:
  InfoRequest();
  virtual ~InfoRequest();

  InfoRequest(const InfoRequest& from);

  inline InfoRequest& operator=(const InfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoRequest& default_instance();

  static inline const InfoRequest* internal_default_instance() {
    return reinterpret_cast<const InfoRequest*>(
               &_InfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(InfoRequest* other);

  // implements Message ----------------------------------------------

  inline InfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InfoRequest& from);
  void MergeFrom(const InfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 source_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InfoResponse) */ {
 public:
  InfoResponse();
  virtual ~InfoResponse();

  InfoResponse(const InfoResponse& from);

  inline InfoResponse& operator=(const InfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoResponse& default_instance();

  static inline const InfoResponse* internal_default_instance() {
    return reinterpret_cast<const InfoResponse*>(
               &_InfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(InfoResponse* other);

  // implements Message ----------------------------------------------

  inline InfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  InfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InfoResponse& from);
  void MergeFrom(const InfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Status status() const;
  void set_status(::Status value);

  // int32 nodeCount = 2;
  void clear_nodecount();
  static const int kNodeCountFieldNumber = 2;
  ::google::protobuf::int32 nodecount() const;
  void set_nodecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  ::google::protobuf::int32 nodecount_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitRequest) */ {
 public:
  InitRequest();
  virtual ~InitRequest();

  InitRequest(const InitRequest& from);

  inline InitRequest& operator=(const InitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRequest& default_instance();

  static inline const InitRequest* internal_default_instance() {
    return reinterpret_cast<const InitRequest*>(
               &_InitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(InitRequest* other);

  // implements Message ----------------------------------------------

  inline InitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitRequest& from);
  void MergeFrom(const InitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ClientType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ClientType type() const;
  void set_type(::ClientType value);

  // int32 address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  ::google::protobuf::int32 address() const;
  void set_address(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::int32 address_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitResponse) */ {
 public:
  InitResponse();
  virtual ~InitResponse();

  InitResponse(const InitResponse& from);

  inline InitResponse& operator=(const InitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResponse& default_instance();

  static inline const InitResponse* internal_default_instance() {
    return reinterpret_cast<const InitResponse*>(
               &_InitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(InitResponse* other);

  // implements Message ----------------------------------------------

  inline InitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  InitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitResponse& from);
  void MergeFrom(const InitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Status status() const;
  void set_status(::Status value);

  // @@protoc_insertion_point(class_scope:InitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  inline Packet* New() const PROTOBUF_FINAL { return New(NULL); }

  Packet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Packet_Type Type;
  static const Type DATA =
    Packet_Type_DATA;
  static const Type COMMAND =
    Packet_Type_COMMAND;
  static inline bool Type_IsValid(int value) {
    return Packet_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Packet_Type_Type_MIN;
  static const Type Type_MAX =
    Packet_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Packet_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Packet_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Packet_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Packet_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes payload = 6;
  void clear_payload();
  static const int kPayloadFieldNumber = 6;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // int32 length = 1;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // int32 sequence = 2;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // .Packet.Type type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::Packet_Type type() const;
  void set_type(::Packet_Type value);

  // int32 source = 4;
  void clear_source();
  static const int kSourceFieldNumber = 4;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // int32 destination = 5;
  void clear_destination();
  static const int kDestinationFieldNumber = 5;
  ::google::protobuf::int32 destination() const;
  void set_destination(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Packet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 sequence_;
  int type_;
  ::google::protobuf::int32 source_;
  ::google::protobuf::int32 destination_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TxRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TxRequest) */ {
 public:
  TxRequest();
  virtual ~TxRequest();

  TxRequest(const TxRequest& from);

  inline TxRequest& operator=(const TxRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxRequest& default_instance();

  static inline const TxRequest* internal_default_instance() {
    return reinterpret_cast<const TxRequest*>(
               &_TxRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TxRequest* other);

  // implements Message ----------------------------------------------

  inline TxRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TxRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TxRequest& from);
  void MergeFrom(const TxRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TxRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Packet packet = 1;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 1;
  const ::Packet& packet() const;
  ::Packet* mutable_packet();
  ::Packet* release_packet();
  void set_allocated_packet(::Packet* packet);

  // @@protoc_insertion_point(class_scope:TxRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Packet* packet_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TxResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TxResponse) */ {
 public:
  TxResponse();
  virtual ~TxResponse();

  TxResponse(const TxResponse& from);

  inline TxResponse& operator=(const TxResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxResponse& default_instance();

  static inline const TxResponse* internal_default_instance() {
    return reinterpret_cast<const TxResponse*>(
               &_TxResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TxResponse* other);

  // implements Message ----------------------------------------------

  inline TxResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TxResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TxResponse& from);
  void MergeFrom(const TxResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TxResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Status status() const;
  void set_status(::Status value);

  // @@protoc_insertion_point(class_scope:TxResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RxRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RxRequest) */ {
 public:
  RxRequest();
  virtual ~RxRequest();

  RxRequest(const RxRequest& from);

  inline RxRequest& operator=(const RxRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RxRequest& default_instance();

  static inline const RxRequest* internal_default_instance() {
    return reinterpret_cast<const RxRequest*>(
               &_RxRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RxRequest* other);

  // implements Message ----------------------------------------------

  inline RxRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RxRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RxRequest& from);
  void MergeFrom(const RxRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RxRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  ::google::protobuf::int32 address() const;
  void set_address(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RxRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 address_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RxResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RxResponse) */ {
 public:
  RxResponse();
  virtual ~RxResponse();

  RxResponse(const RxResponse& from);

  inline RxResponse& operator=(const RxResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RxResponse& default_instance();

  static inline const RxResponse* internal_default_instance() {
    return reinterpret_cast<const RxResponse*>(
               &_RxResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RxResponse* other);

  // implements Message ----------------------------------------------

  inline RxResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RxResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RxResponse& from);
  void MergeFrom(const RxResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RxResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Packet packet = 2;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 2;
  const ::Packet& packet() const;
  ::Packet* mutable_packet();
  ::Packet* release_packet();
  void set_allocated_packet(::Packet* packet);

  // .Status status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::Status status() const;
  void set_status(::Status value);

  // @@protoc_insertion_point(class_scope:RxResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Packet* packet_;
  int status_;
  mutable int _cached_size_;
  friend struct protobuf_protobuf_2fsnet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoRequest

// string message = 1;
inline void EchoRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EchoRequest::message() const {
  // @@protoc_insertion_point(field_get:EchoRequest.message)
  return message_.GetNoArena();
}
inline void EchoRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EchoRequest.message)
}
#if LANG_CXX11
inline void EchoRequest::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EchoRequest.message)
}
#endif
inline void EchoRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EchoRequest.message)
}
inline void EchoRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EchoRequest.message)
}
inline ::std::string* EchoRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:EchoRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EchoRequest::release_message() {
  // @@protoc_insertion_point(field_release:EchoRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EchoRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:EchoRequest.message)
}

// -------------------------------------------------------------------

// EchoResponse

// string message = 1;
inline void EchoResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EchoResponse::message() const {
  // @@protoc_insertion_point(field_get:EchoResponse.message)
  return message_.GetNoArena();
}
inline void EchoResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EchoResponse.message)
}
#if LANG_CXX11
inline void EchoResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EchoResponse.message)
}
#endif
inline void EchoResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EchoResponse.message)
}
inline void EchoResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EchoResponse.message)
}
inline ::std::string* EchoResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:EchoResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EchoResponse::release_message() {
  // @@protoc_insertion_point(field_release:EchoResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EchoResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:EchoResponse.message)
}

// -------------------------------------------------------------------

// ResetRequest

// int32 address = 1;
inline void ResetRequest::clear_address() {
  address_ = 0;
}
inline ::google::protobuf::int32 ResetRequest::address() const {
  // @@protoc_insertion_point(field_get:ResetRequest.address)
  return address_;
}
inline void ResetRequest::set_address(::google::protobuf::int32 value) {
  
  address_ = value;
  // @@protoc_insertion_point(field_set:ResetRequest.address)
}

// -------------------------------------------------------------------

// ResetResponse

// .Status status = 1;
inline void ResetResponse::clear_status() {
  status_ = 0;
}
inline ::Status ResetResponse::status() const {
  // @@protoc_insertion_point(field_get:ResetResponse.status)
  return static_cast< ::Status >(status_);
}
inline void ResetResponse::set_status(::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ResetResponse.status)
}

// -------------------------------------------------------------------

// InfoRequest

// int32 source = 1;
inline void InfoRequest::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 InfoRequest::source() const {
  // @@protoc_insertion_point(field_get:InfoRequest.source)
  return source_;
}
inline void InfoRequest::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:InfoRequest.source)
}

// -------------------------------------------------------------------

// InfoResponse

// .Status status = 1;
inline void InfoResponse::clear_status() {
  status_ = 0;
}
inline ::Status InfoResponse::status() const {
  // @@protoc_insertion_point(field_get:InfoResponse.status)
  return static_cast< ::Status >(status_);
}
inline void InfoResponse::set_status(::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:InfoResponse.status)
}

// int32 nodeCount = 2;
inline void InfoResponse::clear_nodecount() {
  nodecount_ = 0;
}
inline ::google::protobuf::int32 InfoResponse::nodecount() const {
  // @@protoc_insertion_point(field_get:InfoResponse.nodeCount)
  return nodecount_;
}
inline void InfoResponse::set_nodecount(::google::protobuf::int32 value) {
  
  nodecount_ = value;
  // @@protoc_insertion_point(field_set:InfoResponse.nodeCount)
}

// -------------------------------------------------------------------

// InitRequest

// .ClientType type = 1;
inline void InitRequest::clear_type() {
  type_ = 0;
}
inline ::ClientType InitRequest::type() const {
  // @@protoc_insertion_point(field_get:InitRequest.type)
  return static_cast< ::ClientType >(type_);
}
inline void InitRequest::set_type(::ClientType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:InitRequest.type)
}

// int32 address = 2;
inline void InitRequest::clear_address() {
  address_ = 0;
}
inline ::google::protobuf::int32 InitRequest::address() const {
  // @@protoc_insertion_point(field_get:InitRequest.address)
  return address_;
}
inline void InitRequest::set_address(::google::protobuf::int32 value) {
  
  address_ = value;
  // @@protoc_insertion_point(field_set:InitRequest.address)
}

// -------------------------------------------------------------------

// InitResponse

// .Status status = 1;
inline void InitResponse::clear_status() {
  status_ = 0;
}
inline ::Status InitResponse::status() const {
  // @@protoc_insertion_point(field_get:InitResponse.status)
  return static_cast< ::Status >(status_);
}
inline void InitResponse::set_status(::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:InitResponse.status)
}

// -------------------------------------------------------------------

// Packet

// int32 length = 1;
inline void Packet::clear_length() {
  length_ = 0;
}
inline ::google::protobuf::int32 Packet::length() const {
  // @@protoc_insertion_point(field_get:Packet.length)
  return length_;
}
inline void Packet::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:Packet.length)
}

// int32 sequence = 2;
inline void Packet::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 Packet::sequence() const {
  // @@protoc_insertion_point(field_get:Packet.sequence)
  return sequence_;
}
inline void Packet::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:Packet.sequence)
}

// .Packet.Type type = 3;
inline void Packet::clear_type() {
  type_ = 0;
}
inline ::Packet_Type Packet::type() const {
  // @@protoc_insertion_point(field_get:Packet.type)
  return static_cast< ::Packet_Type >(type_);
}
inline void Packet::set_type(::Packet_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Packet.type)
}

// int32 source = 4;
inline void Packet::clear_source() {
  source_ = 0;
}
inline ::google::protobuf::int32 Packet::source() const {
  // @@protoc_insertion_point(field_get:Packet.source)
  return source_;
}
inline void Packet::set_source(::google::protobuf::int32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:Packet.source)
}

// int32 destination = 5;
inline void Packet::clear_destination() {
  destination_ = 0;
}
inline ::google::protobuf::int32 Packet::destination() const {
  // @@protoc_insertion_point(field_get:Packet.destination)
  return destination_;
}
inline void Packet::set_destination(::google::protobuf::int32 value) {
  
  destination_ = value;
  // @@protoc_insertion_point(field_set:Packet.destination)
}

// bytes payload = 6;
inline void Packet::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Packet::payload() const {
  // @@protoc_insertion_point(field_get:Packet.payload)
  return payload_.GetNoArena();
}
inline void Packet::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Packet.payload)
}
#if LANG_CXX11
inline void Packet::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Packet.payload)
}
#endif
inline void Packet::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Packet.payload)
}
inline void Packet::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Packet.payload)
}
inline ::std::string* Packet::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:Packet.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Packet::release_payload() {
  // @@protoc_insertion_point(field_release:Packet.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Packet::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:Packet.payload)
}

// -------------------------------------------------------------------

// TxRequest

// .Packet packet = 1;
inline bool TxRequest::has_packet() const {
  return this != internal_default_instance() && packet_ != NULL;
}
inline void TxRequest::clear_packet() {
  if (GetArenaNoVirtual() == NULL && packet_ != NULL) delete packet_;
  packet_ = NULL;
}
inline const ::Packet& TxRequest::packet() const {
  // @@protoc_insertion_point(field_get:TxRequest.packet)
  return packet_ != NULL ? *packet_
                         : *::Packet::internal_default_instance();
}
inline ::Packet* TxRequest::mutable_packet() {
  
  if (packet_ == NULL) {
    packet_ = new ::Packet;
  }
  // @@protoc_insertion_point(field_mutable:TxRequest.packet)
  return packet_;
}
inline ::Packet* TxRequest::release_packet() {
  // @@protoc_insertion_point(field_release:TxRequest.packet)
  
  ::Packet* temp = packet_;
  packet_ = NULL;
  return temp;
}
inline void TxRequest::set_allocated_packet(::Packet* packet) {
  delete packet_;
  packet_ = packet;
  if (packet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TxRequest.packet)
}

// -------------------------------------------------------------------

// TxResponse

// .Status status = 1;
inline void TxResponse::clear_status() {
  status_ = 0;
}
inline ::Status TxResponse::status() const {
  // @@protoc_insertion_point(field_get:TxResponse.status)
  return static_cast< ::Status >(status_);
}
inline void TxResponse::set_status(::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:TxResponse.status)
}

// -------------------------------------------------------------------

// RxRequest

// int32 address = 1;
inline void RxRequest::clear_address() {
  address_ = 0;
}
inline ::google::protobuf::int32 RxRequest::address() const {
  // @@protoc_insertion_point(field_get:RxRequest.address)
  return address_;
}
inline void RxRequest::set_address(::google::protobuf::int32 value) {
  
  address_ = value;
  // @@protoc_insertion_point(field_set:RxRequest.address)
}

// -------------------------------------------------------------------

// RxResponse

// .Status status = 1;
inline void RxResponse::clear_status() {
  status_ = 0;
}
inline ::Status RxResponse::status() const {
  // @@protoc_insertion_point(field_get:RxResponse.status)
  return static_cast< ::Status >(status_);
}
inline void RxResponse::set_status(::Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RxResponse.status)
}

// .Packet packet = 2;
inline bool RxResponse::has_packet() const {
  return this != internal_default_instance() && packet_ != NULL;
}
inline void RxResponse::clear_packet() {
  if (GetArenaNoVirtual() == NULL && packet_ != NULL) delete packet_;
  packet_ = NULL;
}
inline const ::Packet& RxResponse::packet() const {
  // @@protoc_insertion_point(field_get:RxResponse.packet)
  return packet_ != NULL ? *packet_
                         : *::Packet::internal_default_instance();
}
inline ::Packet* RxResponse::mutable_packet() {
  
  if (packet_ == NULL) {
    packet_ = new ::Packet;
  }
  // @@protoc_insertion_point(field_mutable:RxResponse.packet)
  return packet_;
}
inline ::Packet* RxResponse::release_packet() {
  // @@protoc_insertion_point(field_release:RxResponse.packet)
  
  ::Packet* temp = packet_;
  packet_ = NULL;
  return temp;
}
inline void RxResponse::set_allocated_packet(::Packet* packet) {
  delete packet_;
  packet_ = packet;
  if (packet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RxResponse.packet)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Packet_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Packet_Type>() {
  return ::Packet_Type_descriptor();
}
template <> struct is_proto_enum< ::Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Status>() {
  return ::Status_descriptor();
}
template <> struct is_proto_enum< ::ClientType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ClientType>() {
  return ::ClientType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protobuf_2fsnet_2eproto__INCLUDED
